# Makefile for MODPATH/MODPATH-PLOT 
#
# Usage:  make [BINDIR=path_to_install_to] [install] [| tee makeout]
#
# Examples:  make
#            make install BINDIR=/usr/opt/bin
#            make install BINDIR=$HOME/bin
#
# Last modified 00/07/24, mcrouse

# this description file uses the Bourne shell
SHELL = /bin/sh

# Fortran compiler flags (Solaris):
#   -O - optimization
# (Note: set FFLAGS to: OptM to generate optimized code
#                       DbgF to generate debug code)
DG      = -O -save
Solaris = -O 
SGI     = -O -32 -static
OptM    = $(Solaris)
DbgF    = -C -g
FFLAGS  = $(OptM)

# Compiler name
FC     = f90

# GKS libraries:
XGks     = -L/usr/opt/xgks/lib -lxgks
GliGks   = -L/usr/local/lib -lgks
LGks     = $(GliGks)

# GKS-implementation-specific routines:
XGksObj  = gkslev2b.o gkscus.o utilgks.o
GliObj   = gkslev0a.o gkscus.o gqcr.o utilgli.o
GksObj   = $(GliObj)

#*******************************************************************
#***** You should not need to modify anything below this line. *****
#*******************************************************************

PGM    = mpath3
PGM2   = mplot3
OBJS   = mpath3.o mpinit.o mpdatin.o mpdrive.o flowdata.o startloc.o mpmove.o \
         prs.o mpspinp.o writpts.o utilmp.o sysux.o utilmf.o
OBJS2  = mplot3.o mppinit.o mppdrive.o mppdatin.o utildraw.o drawpath.o \
         drawdcf.o readpts.o grid.o contours.o prs.o $(GksObj) \
         utilmpp.o plotstrs.o sysux.o utilmf.o

# Default location to link executables on installation
BINDIR = ../bin
BDir   = ../bin
EXE    = $(BDir)/$(PGM).exe
EXE2   = $(BDir)/$(PGM2).exe
BIN    = $(BINDIR)/$(PGM)
BIN2   = $(BINDIR)/$(PGM2)

# Rules
all: chkdir $(EXE) $(EXE2) install
	@echo; echo Done making all, files are now up-to-date.

$(EXE): $(OBJS)
	@echo
	$(FC) $(FFLAGS) $(OBJS) -nolib -Bstatic -lf90 -lF77 -Bdynamic -lsunmath -lm -lcx -lc -o $@
	strip $@

$(EXE2): $(OBJS2)
	@echo
	$(FC) $(FFLAGS) $(OBJS2) -nolib -Bstatic $(LGks) -lf90 -lF77 -Bdynamic -lsunmath -lm -lcx -lc -lnsl -lXt -lX11 -ldl -lmp -lSM -lICE -lsocket -lXext -o $@
	strip $@

chkdir:
# Create directory for binary, if necessary
	@if [ ! -d $(BDir) ]; then \
		mkdir $(BDir); echo Created directory $(BDir); fi
install:
# Put path name of distribution directory into execution scripts
# (Note:  sed editing command below equivalent to "s/TOPDIR=.*$/TOPDIR=`pwd`/"
# Colons used instead of slashes since result of `pwd` will contain slashes;
# double dollar sign used since make strips off one dollar sign.)
	@cd ..; \
	sed "s:TOPDIR=.*$$:TOPDIR=`pwd`:" bin/$(PGM) > bin/$(PGM).tmp; \
	sed "s:TOPDIR=.*$$:TOPDIR=`pwd`:" bin/$(PGM2) > bin/$(PGM2).tmp
	@cd ../bin; mv -f $(PGM).tmp $(PGM); mv -f $(PGM2).tmp $(PGM2); \
	chmod 755 $(PGM) $(PGM2)

# Create directory for links, if necessary
	@if [ ! -d $(BINDIR) ]; then \
		mkdir $(BINDIR); echo Created directory $(BINDIR); fi

# Place links in BINDIR
	@if [ ! -s $(EXE) -o ! -s $(EXE2) ]; then \
		echo Executable $(EXE) or $(EXE2) does not exist,; \
		echo use one of the following commands to generate it:; \
		echo "      make"; echo "      make all"; \
	else \
		if [ $(BINDIR) != $(BDir) ]; then \
			rm -f $(BIN); \
			rm -f $(BIN2); \
			cd ..; ln -s `pwd`/bin/$(PGM) $(BIN); \
			cd ..; ln -s `pwd`/bin/$(PGM2) $(BIN2); \
			echo; echo Executables $(BIN) and $(BIN2) have been updated.; \
			echo; echo Be sure directory $(BINDIR) is in your PATH.; \
		else \
			cd $(BDir); echo; echo Be sure directory `pwd` is in your PATH.; \
		fi; \
	fi

clean:
	@if [ $(BINDIR) != $(BDir) ]; \
		then rm -f $(BIN); \
	fi
	rm -f $(EXE) *.o
	@echo; echo Removed files generated by make.

# object code dependencies
gksint0a.o:    gksprm.inc lkagks.inc
